{"version":3,"sources":["Home.js","Male.js","Female.js","Nationality.js","Main.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","_this2","fetch","then","res","json","parsedJSON","results","map","data","id","concat","name","firstName","first","lastName","last","location","nat","thumbnail","picture","large","setState","isLoaded","catch","error","console","log","react_default","a","createElement","className","length","item","key","src","alt","Component","email","username","login","password","Main","react_router_dom","exact","to","react_router","path","component","Male","Female","Nationality","Boolean","window","hostname","match","ReactDOM","render","src_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bbc5049.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?results=6\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        location: `${data.location.state}, ${data.nat}`,\r\n        thumbnail: `${data.picture.large}`,\r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, location, thumbnail} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {location}\r\n                </div>\r\n\r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?gender=male&results=6\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        location: `${data.location.state}, ${data.nat}`,\r\n        thumbnail: `${data.picture.large}`,\r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, location, thumbnail} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {location}\r\n                </div>\r\n\r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?gender=female&results=6\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        location: `${data.location.state}, ${data.nat}`,\r\n        thumbnail: `${data.picture.large}`,\r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, location, thumbnail} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {location}\r\n                </div>\r\n\r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://randomuser.me/api/?nat=au&results=6\")\r\n    .then(res => res.json())\r\n    .then(parsedJSON => parsedJSON.results.map(data => (\r\n      {\r\n        id: `${data.id.name}`,\r\n        firstName: `${data.name.first}`,\r\n        lastName: `${data.name.last}`,\r\n        email: `${data.email}`,\r\n        username: `${data.login.username}`,\r\n        password: `${data.login.password}`,\r\n        thumbnail: `${data.picture.large}`,\r\n      }\r\n    )))\r\n    .then(items => this.setState({\r\n      items,\r\n      isLoaded: false\r\n    }))\r\n    .catch(error => console.log('parsing failed', error))\r\n  }\r\n\r\n  render() {\r\n    const {items} = this.state;\r\n    return (\r\n      <div className=\"boxWhite\">\r\n        {\r\n          items.length > 0 ? items.map(item => {\r\n            const {id, firstName, lastName, email, thumbnail, username,password} = item;\r\n            return (\r\n              <div key={id} className=\"bgCircle\">\r\n                <center><img src={thumbnail} alt={firstName} className=\"circle\"/> </center><br />\r\n                <div className=\"ctr\">\r\n                  {firstName} {lastName}<br />\r\n                  {email}<br/>\r\n                  {username}<br/>\r\n                  {password}\r\n                </div>\r\n\r\n              </div>\r\n            );\r\n          }) : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport {Route, NavLink, HashRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Male from \"./Male\";\r\nimport Female from \"./Female\";\r\nimport Nationality from \"./Nationality\";\r\n \r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <h1 className=\"title\">Fetching Data API</h1>\r\n          <ul className=\"header\">\r\n            <li><NavLink exact to=\"/\">Home</NavLink></li>\r\n\t\t\t<li><NavLink exact to=\"/Male\">Male</NavLink></li>\r\n\t\t\t<li><NavLink exact to=\"/Female\">Female</NavLink></li>\r\n      <li><NavLink exact to=\"/Nationality\">Nationality</NavLink></li>\r\n \r\n          </ul>\r\n          <div className=\"content\">\r\n            <Route exact path=\"/\" component={Home}/>\r\n\t\t\t<Route exact path=\"/Male\" component={Male}/>\r\n\t\t\t<Route exact path=\"/Female\" component={Female}/>\r\n      <Route exact path=\"/Nationality\" component={Nationality}/>\r\n          </div>\r\n        </div>\r\n        </HashRouter>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from \"./Main\";\nimport \"./style.css\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}